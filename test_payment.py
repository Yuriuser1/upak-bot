#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ YooKassa API
"""
import asyncio
import os
import base64
import aiohttp
import uuid
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
YANDEX_CHECKOUT_KEY = os.getenv("YANDEX_CHECKOUT_KEY")
YANDEX_CHECKOUT_SHOP_ID = os.getenv("YANDEX_CHECKOUT_SHOP_ID")

async def test_create_payment():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ YooKassa API"""
    if not (YANDEX_CHECKOUT_KEY and YANDEX_CHECKOUT_SHOP_ID):
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è YooKassa")
        return False
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ YooKassa:")
    print(f"Shop ID: {YANDEX_CHECKOUT_SHOP_ID}")
    print(f"API Key: {YANDEX_CHECKOUT_KEY[:20]}...")
    print("")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
    payment_id = str(uuid.uuid4())
    auth_string = base64.b64encode(f"{YANDEX_CHECKOUT_SHOP_ID}:{YANDEX_CHECKOUT_KEY}".encode()).decode()
    
    payload = {
        "amount": {"value": "10.00", "currency": "RUB"},
        "confirmation": {"type": "redirect", "return_url": "https://upak.space/payment-success"},
        "capture": True,
        "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ UPAK Bot",
        "metadata": {"user_id": "test_user", "service": "upak_platform", "tariff": "basic"},
        "receipt": {
            "customer": {
                "email": "test@upak.space"
            },
            "items": [
                {
                    "description": "–¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞ UPAK",
                    "quantity": "1.00",
                    "amount": {
                        "value": "10.00",
                        "currency": "RUB"
                    },
                    "vat_code": "1",
                    "payment_mode": "full_payment",
                    "payment_subject": "service"
                }
            ]
        }
    }
    
    headers = {
        "Idempotence-Key": payment_id,
        "Authorization": f"Basic {auth_string}",
        "Content-Type": "application/json"
    }
    
    print("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂...")
    print(f"–°—É–º–º–∞: {payload['amount']['value']} {payload['amount']['currency']}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {payload['description']}")
    print("")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(
                "https://api.yookassa.ru/v3/payments",
                json=payload,
                headers=headers
            ) as response:
                
                print(f"üì° –û—Ç–≤–µ—Ç API: {response.status}")
                response_text = await response.text()
                
                if response.status == 200:
                    data = await response.json()
                    print("‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
                    print(f"ID –ø–ª–∞—Ç–µ–∂–∞: {data.get('id')}")
                    print(f"–°—Ç–∞—Ç—É—Å: {data.get('status')}")
                    print(f"–°—É–º–º–∞: {data.get('amount', {}).get('value')} {data.get('amount', {}).get('currency')}")
                    print(f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {data.get('confirmation', {}).get('confirmation_url')}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: {response.status}")
                    print(f"–û—Ç–≤–µ—Ç API: {response_text}")
                    return False
                    
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ YooKassa")
    print("=" * 50)
    result = asyncio.run(test_create_payment())
    print("=" * 50)
    if result:
        print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.")
